import React, { useState } from 'react';
import styles from './ForumPage.module.css';
import UserProfile from '../UserProfile/UserProfile';
import Button from '../Button/Button';
import forumStoriesData from './forumStoriesData'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –¥–∞–Ω—ñ

const ForumPage = () => {
  const user = {
    login: 'Tarabakina',
    email: 'tarabyta@gmail.com',
    profileImage: '/userProfileImage.jpg',
  };

  const navigationItems = [
    { label: '–§–æ—Ä—É–º' },
  ];

  const topics = ["–í—Å—ñ", "–û—Å–æ–±–∏—Å—Ç—ñ", "–¢—Ä–∞–≤–º–∞", "–°—Ç—Ä–µ—Å", "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è", "–ê–¥–∞–ø—Ç–∞—Ü—ñ—è", "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞"];
  const [selectedTopic, setSelectedTopic] = useState(null);
  const [likes, setLikes] = useState({});
  const [commentFormsVisible, setCommentFormsVisible] = useState({});
  const [comments, setComments] = useState({});

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
  const filteredStories = selectedTopic
    ? forumStoriesData.filter((story) => story.topic === selectedTopic)
    : forumStoriesData;

  const handleTopicClick = (topic) => {
    setSelectedTopic(topic === "–í—Å—ñ" ? null : topic);
  };

  const handleLike = (storyId) => {
    setLikes(prevLikes => ({
      ...prevLikes,
      [storyId]: (prevLikes[storyId] || 0) + 1,
    }));
    console.log(`–õ–∞–π–∫ —ñ—Å—Ç–æ—Ä—ñ—ó ${storyId}`);
  };

  const handleCommentClick = (storyId) => {
    setCommentFormsVisible(prevVisibility => ({
      ...prevVisibility,
      [storyId]: !prevVisibility[storyId],
    }));
  };

  const handleCommentChange = (event, storyId) => {
    setComments(prevComments => ({
      ...prevComments,
      [storyId]: event.target.value,
    }));
  };

  const handlePostComment = (storyId) => {
    const commentText = comments[storyId];
    if (commentText) {
      console.log(`–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó ${storyId}:`, commentText);
      setComments(prevComments => ({ ...prevComments, [storyId]: '' }));
      setCommentFormsVisible(prevVisibility => ({ ...prevVisibility, [storyId]: false }));
    }
  };

  return (
    <div className={styles.forumContainer}>
      {/* –ü–µ—Ä—à–∞ —Å–µ–∫—Ü—ñ—è - –ì–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω */}
      <section className={styles.heroSection}>
        <h1 className={styles.heroTitle}>–§–æ—Ä—É–º, –¥–µ –º–æ–∂–Ω–∞ –ø–æ—á–∏—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—ó —ñ–Ω—à–∏—Ö</h1>
        <p className={styles.heroText}>
          –ú–∏ –ø—Ä–∞–≥–Ω–µ–º–æ, –∞–±–∏ —Ü–µ–π –ø—Ä–æ—Å—Ç—ñ—Ä –¥–æ–ø–æ–º—ñ–≥ –≤–∞–º –±—É—Ç–∏ –ø–æ—á—É—Ç–∏–º–∏, –¥–∞–≤—à–∏ —à–∞–Ω—Å –Ω–∞ –ø–æ–ª–µ–≥—à–µ–Ω–Ω—è.
        </p>
        <div className={styles.heroBackground} />
      </section>

      {/* –î—Ä—É–≥–∞ —Å–µ–∫—Ü—ñ—è - –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
      <UserProfile user={user} navigationItems={navigationItems} activeItem="–§–æ—Ä—É–º" />

      {/* –¢—Ä–µ—Ç—è —Å–µ–∫—Ü—ñ—è - –ü–µ—Ä–µ–ª—ñ–∫ —Ç–µ–º–∞—Ç–∏–∫ —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—ó */}
      <section className={styles.storiesSection}>
        <div className={styles.topicsColumn}>
          <h2 className={styles.topicsTitle}>–¢–µ–º–∞—Ç–∏–∫–∏</h2>
          <ul className={styles.topicsList}>
            {topics.map((topic) => (
              <li
                key={topic}
                className={styles.topicItem}
                onClick={() => handleTopicClick(topic)}
                style={{ fontWeight: selectedTopic === topic ? 'bold' : 'normal' }}
              >
                {topic}
              </li>
            ))}
          </ul>
        </div>
        <div className={styles.storiesColumn}>
          <h2 className={styles.storiesTitle}>–Ü—Å—Ç–æ—Ä—ñ—ó {selectedTopic && `(${selectedTopic})`}</h2>
          {filteredStories.map((story) => (
            <div key={story.id} className={styles.storyCard}>
              <div className={styles.authorInfo}>
                <img src={story.author.photo} alt={story.author.name} className={styles.authorPhoto} />
                <div className={styles.authorDetails}>
                  <h3 className={styles.authorName}>{story.author.name}</h3>
                  <p className={styles.authorEmail}>{story.author.email}</p>
                </div>
              </div>
              {story.title && <h4 className={styles.storyTitle}>{story.title}</h4>}
              <p className={styles.storyText}>{story.text}</p>
              <div className={styles.storyMeta}>
                <span className={styles.storyTopic}>{story.topic}</span>
                <div className={styles.storyActions}>
                  <Button variant="icon" onClick={() => handleLike(story.id)}>
                    ‚ù§Ô∏è {likes[story.id] || story.likes}
                  </Button>
                  <Button variant="icon" onClick={() => handleCommentClick(story.id)}>
                    üí¨ {story.comments}
                  </Button>
                </div>
              </div>
              {commentFormsVisible[story.id] && (
                <div className={styles.commentForm}>
                  <textarea
                    value={comments[story.id] || ''}
                    onChange={(e) => handleCommentChange(e, story.id)}
                    placeholder="–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –∫–æ–º–µ–Ω—Ç–∞—Ä..."
                  />
                  <Button variant="blue" onClick={() => handlePostComment(story.id)}>–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</Button>
                </div>
              )}
            </div>
          ))}
        </div>
      </section>
    </div>
  );
};

export default ForumPage;